"""
This type stub file was generated by pyright.
"""

from ..dataloaders import LoadImagesAndLabels

"""
Dataloaders
"""
RANK = ...
def create_dataloader(path, imgsz, batch_size, stride, single_cls=..., hyp=..., augment=..., cache=..., pad=..., rect=..., rank=..., workers=..., image_weights=..., quad=..., prefix=..., shuffle=..., mask_downsample_ratio=..., overlap_mask=...): # -> tuple[DataLoader[Unknown] | InfiniteDataLoader, LoadImagesAndLabelsAndMasks]:
    ...

class LoadImagesAndLabelsAndMasks(LoadImagesAndLabels):
    def __init__(self, path, img_size=..., batch_size=..., augment=..., hyp=..., rect=..., image_weights=..., cache_images=..., single_cls=..., stride=..., pad=..., min_items=..., prefix=..., downsample_ratio=..., overlap=...) -> None:
        ...
    
    def __getitem__(self, index): # -> tuple[Tensor, Tensor, Unknown, tuple[tuple[Any | int | Unknown, Any | int | Unknown], tuple[tuple[Any | float | Unknown, Any | float | Unknown], tuple[Any | float | Unknown, Any | float | Unknown]]] | None, Tensor]:
        ...
    
    def load_mosaic(self, index): # -> tuple[Any | Unknown, Unknown, ndarray[Any, dtype[Unknown]] | list[Unknown]]:
        ...
    
    @staticmethod
    def collate_fn(batch): # -> tuple[Tensor, Tensor, Unknown, Unknown, Tensor]:
        ...
    


def polygon2mask(img_size, polygons, color=..., downsample_ratio=...): # -> Mat:
    """
    Args:
        img_size (tuple): The image size.
        polygons (np.ndarray): [N, M], N is the number of polygons,
            M is the number of points(Be divided by 2).
    """
    ...

def polygons2masks(img_size, polygons, color, downsample_ratio=...): # -> NDArray[Unknown]:
    """
    Args:
        img_size (tuple): The image size.
        polygons (list[np.ndarray]): each polygon is [N, M],
            N is the number of polygons,
            M is the number of points(Be divided by 2).
    """
    ...

def polygons2masks_overlap(img_size, segments, downsample_ratio=...): # -> tuple[NDArray[int32 | uint8], NDArray[intp]]:
    """Return a (640, 640) overlap mask."""
    ...

