"""
This type stub file was generated by pyright.
"""

from contextlib import contextmanager

"""
PyTorch utils
"""
LOCAL_RANK = ...
RANK = ...
WORLD_SIZE = ...
def smart_inference_mode(torch_1_9=...): # -> (fn: Unknown) -> Unknown:
    ...

def smartCrossEntropyLoss(label_smoothing=...): # -> CrossEntropyLoss:
    ...

def smart_DDP(model): # -> DistributedDataParallel:
    ...

def reshape_classifier_output(model, n=...): # -> None:
    ...

@contextmanager
def torch_distributed_zero_first(local_rank: int): # -> Generator[None, None, None]:
    ...

def device_count(): # -> int:
    ...

def select_device(device=..., batch_size=..., newline=...): # -> device:
    ...

def time_sync(): # -> float:
    ...

def profile(input, ops, n=..., device=...):
    """ YOLOv5 speed/memory/FLOPs profiler
    Usage:
        input = torch.randn(16, 3, 640, 640)
        m1 = lambda x: x * torch.sigmoid(x)
        m2 = nn.SiLU()
        profile(input, [m1, m2], n=100)  # profile over 100 iterations
    """
    ...

def is_parallel(model): # -> bool:
    ...

def de_parallel(model):
    ...

def initialize_weights(model): # -> None:
    ...

def find_modules(model, mclass=...): # -> list[int]:
    ...

def sparsity(model): # -> float:
    ...

def prune(model, amount=...): # -> None:
    ...

def fuse_conv_and_bn(conv, bn): # -> Conv2d:
    ...

def model_info(model, verbose=..., imgsz=...): # -> None:
    ...

def scale_img(img, ratio=..., same_shape=..., gs=...): # -> Tensor:
    ...

def copy_attr(a, b, include=..., exclude=...): # -> None:
    ...

def smart_optimizer(model, name=..., lr=..., momentum=..., decay=...): # -> Adam | AdamW | RMSprop | SGD:
    ...

def smart_hub_load(repo=..., model=..., **kwargs): # -> Any:
    ...

def smart_resume(ckpt, optimizer, ema=..., weights=..., epochs=..., resume=...): # -> tuple[Unknown | float, Unknown, Unknown | int]:
    ...

class EarlyStopping:
    def __init__(self, patience=...) -> None:
        ...
    
    def __call__(self, epoch, fitness):
        ...
    


class ModelEMA:
    """ Updated Exponential Moving Average (EMA) from https://github.com/rwightman/pytorch-image-models
    Keeps a moving average of everything in the model state_dict (parameters and buffers)
    For EMA details see https://www.tensorflow.org/api_docs/python/tf/train/ExponentialMovingAverage
    """
    def __init__(self, model, decay=..., tau=..., updates=...) -> None:
        ...
    
    def update(self, model): # -> None:
        ...
    
    def update_attr(self, model, include=..., exclude=...): # -> None:
        ...
    


