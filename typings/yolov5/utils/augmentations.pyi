"""
This type stub file was generated by pyright.
"""

"""
Image augmentation functions
"""
IMAGENET_MEAN = ...
IMAGENET_STD = ...
class Albumentations:
    def __init__(self, size=...) -> None:
        ...
    
    def __call__(self, im, labels, p=...): # -> tuple[Unknown, NDArray[Unknown] | Unknown]:
        ...
    


def normalize(x, mean=..., std=..., inplace=...): # -> Tensor:
    ...

def denormalize(x, mean=..., std=...):
    ...

def augment_hsv(im, hgain=..., sgain=..., vgain=...): # -> None:
    ...

def hist_equalize(im, clahe=..., bgr=...): # -> Mat:
    ...

def replicate(im, labels): # -> tuple[Unknown, Unknown | NDArray[Any]]:
    ...

def letterbox(im, new_shape=..., color=..., auto=..., scaleFill=..., scaleup=..., stride=...): # -> tuple[Any, tuple[float | Unknown, float | Unknown] | tuple[Unknown, Unknown], tuple[Any | float | Unknown, Any | float | Unknown]]:
    ...

def random_perspective(im, targets=..., segments=..., degrees=..., translate=..., scale=..., shear=..., perspective=..., border=...): # -> tuple[Any | Unknown, Unknown]:
    ...

def copy_paste(im, labels, segments, p=...): # -> tuple[Unknown, Unknown, Unknown]:
    ...

def cutout(im, labels, p=...):
    ...

def mixup(im, labels, im2, labels2): # -> tuple[Unknown, NDArray[Unknown]]:
    ...

def box_candidates(box1, box2, wh_thr=..., ar_thr=..., area_thr=..., eps=...):
    ...

def classify_albumentations(augment=..., size=..., scale=..., ratio=..., hflip=..., vflip=..., jitter=..., mean=..., std=..., auto_aug=...):
    ...

def classify_transforms(size=...): # -> Compose:
    ...

class LetterBox:
    def __init__(self, size=..., auto=..., stride=...) -> None:
        ...
    
    def __call__(self, im): # -> NDArray[Any]:
        ...
    


class CenterCrop:
    def __init__(self, size=...) -> None:
        ...
    
    def __call__(self, im): # -> Mat:
        ...
    


class ToTensor:
    def __init__(self, half=...) -> None:
        ...
    
    def __call__(self, im): # -> Tensor:
        ...
    


