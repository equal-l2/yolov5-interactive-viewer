"""
This type stub file was generated by pyright.
"""

import sys

"""
Run YOLOv5 benchmarks on all supported export formats

Format                      | `export.py --include`         | Model
---                         | ---                           | ---
PyTorch                     | -                             | yolov5s.pt
TorchScript                 | `torchscript`                 | yolov5s.torchscript
ONNX                        | `onnx`                        | yolov5s.onnx
OpenVINO                    | `openvino`                    | yolov5s_openvino_model/
TensorRT                    | `engine`                      | yolov5s.engine
CoreML                      | `coreml`                      | yolov5s.mlmodel
TensorFlow SavedModel       | `saved_model`                 | yolov5s_saved_model/
TensorFlow GraphDef         | `pb`                          | yolov5s.pb
TensorFlow Lite             | `tflite`                      | yolov5s.tflite
TensorFlow Edge TPU         | `edgetpu`                     | yolov5s_edgetpu.tflite
TensorFlow.js               | `tfjs`                        | yolov5s_web_model/

Requirements:
    $ pip install -r requirements.txt coremltools onnx onnx-simplifier onnxruntime openvino-dev tensorflow-cpu  # CPU
    $ pip install -r requirements.txt coremltools onnx onnx-simplifier onnxruntime-gpu openvino-dev tensorflow  # GPU
    $ pip install -U nvidia-tensorrt --index-url https://pypi.ngc.nvidia.com  # TensorRT

Usage:
    $ yolov5 benchmarks --weights yolov5s.pt --img 640
"""
FILE = ...
ROOT = ...
if str(ROOT) not in sys.path:
    ...
def run(weights=..., imgsz=..., img=..., batch_size=..., batch=..., data=..., device=..., half=..., test=..., pt_only=..., hard_fail=...):
    ...

def test(weights=..., imgsz=..., batch_size=..., data=..., device=..., half=..., test=..., pt_only=..., hard_fail=...): # -> DataFrame:
    ...

def run_cli(**kwargs): # -> None:
    '''
    To be called from yolov5.cli
    '''
    ...

def parse_opt(): # -> Namespace:
    ...

def main(): # -> None:
    ...

if __name__ == "__main__":
    ...
