"""
This type stub file was generated by pyright.
"""

import platform
import sys
from yolov5.models.common import *
from yolov5.models.experimental import *

"""
YOLO-specific modules

Usage:
    $ python models/yolo.py --cfg yolov5s.yaml
"""
FILE = ...
ROOT = ...
if str(ROOT) not in sys.path:
    ...
if platform.system() != 'Windows':
    ROOT = ...
class Detect(nn.Module):
    stride = ...
    dynamic = ...
    export = ...
    def __init__(self, nc=..., anchors=..., ch=..., inplace=...) -> None:
        ...
    
    def forward(self, x): # -> tuple[Tensor] | tuple[Tensor, Unknown]:
        ...
    


class Segment(Detect):
    def __init__(self, nc=..., anchors=..., nm=..., npr=..., ch=..., inplace=...) -> None:
        ...
    
    def forward(self, x): # -> tuple[Unknown | tuple[Tensor] | tuple[Tensor, Unknown], Any] | tuple[Unknown | Tensor, Any] | tuple[Unknown | Tensor, Any, Unknown | Tensor]:
        ...
    


class BaseModel(nn.Module):
    def forward(self, x, profile=..., visualize=...):
        ...
    
    def fuse(self): # -> Self@BaseModel:
        ...
    
    def info(self, verbose=..., img_size=...): # -> None:
        ...
    


class DetectionModel(BaseModel):
    def __init__(self, cfg=..., ch=..., nc=..., anchors=...) -> None:
        ...
    
    def forward(self, x, augment=..., profile=..., visualize=...): # -> tuple[Tensor, None]:
        ...
    


Model = DetectionModel
class SegmentationModel(DetectionModel):
    def __init__(self, cfg=..., ch=..., nc=..., anchors=...) -> None:
        ...
    


class ClassificationModel(BaseModel):
    def __init__(self, cfg=..., model=..., nc=..., cutoff=...) -> None:
        ...
    


def parse_model(d, ch): # -> tuple[Sequential, list[Unknown]]:
    ...

if __name__ == '__main__':
    parser = ...
    opt = ...
    device = ...
    im = ...
    model = Model(opt.cfg).to(device)
